name: aws-registry-nodes
description: |
  Creates ec2 instances in AWS with a Route53 record to their public ip for registries.
variables:
  aws_access_key:
    sensitive: true
    type: string
    optional: false
    description: "aws API access key"
  aws_secret_key:
    sensitive: true
    type: string
    optional: false
    description: "aws API secret key"
  aws_region:
    type: string
    optional: false
    description: "The region the ec2 instance would be created"
  aws_ami:
    type: string
    optional: false
    description: "The image of the ec2 instance"
  aws_route53_zone:
    type: string
    optional: false
    description: "The route 53 hosted zone"
  aws_ssh_user:
    type: string
    optional: false
    description: "The user need to initally ssh into an instance i.e ubuntu"
  aws_security_group:
    type: string
    optional: false
    description: "The security group needed for an ec2 instance"
  aws_vpc:
    type: string
    optional: false
    description: "The vpc of where the target group is located"
  aws_subnet:
    type: string
    optional: false
    description: "The subnet where the ec2 instance and the load balancer is created"
  proxy_setup:
    type: boolean
    description: "Boolean that when set to true, will utilize registry_nodes as the bastion node for a proxied setup, ranther than a registry."
    default: false
  airgap_setup:
    type: boolean
    description: "Boolean that when set to true, will set the registry_fqdn to the private IP address, rather than the public IP address."
    default: false
  install_docker:
    description: Flag to install docker on the nodes
    default: false
    type: string
  instance_type:
    type: string
    optional: false
    description: "What size ec2 instance to use for the nodes."
  registry_fqdn:
    type: string
    readOnly: true
    description: "Public DNS A record that directs to the registry node."
  registry_ip:
    type: string
    readOnly: true
    description: "Public IP address of the registry node"
commands:
  - module: pools
  - command: "echo \"$CORRAL_corral_user_public_key\" >> /$(whoami)/.ssh/authorized_keys"
    node_pools:
      - registry
